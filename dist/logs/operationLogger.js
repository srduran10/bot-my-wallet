"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logNarrative = logNarrative;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const logPath = path_1.default.resolve('src/data/operationLog.json');
function logNarrative({ symbol, outcome, probability, capitalUsed, pnl }) {
    const action = outcome === 'win' ? 'gan√≥' : outcome === 'loss' ? 'perdi√≥' : 'mantuvo posici√≥n';
    const mood = probability >= 80 ? 'mercado confiable' :
        probability >= 65 ? 'tendencia t√©cnica s√≥lida' :
            'entorno t√©cnico incierto';
    const insight = outcome === 'win' ? 'Patr√≥n alcista confirmado con m√∫ltiples indicadores.' :
        outcome === 'loss' ? 'Se detect√≥ desviaci√≥n inesperada tras entrada v√°lida.' :
            'No se ejecut√≥ para proteger capital ante baja convicci√≥n.';
    const suggestion = outcome === 'win' ? 'Posibilidad de expandir riesgo progresivamente.' :
        outcome === 'loss' ? 'Reducir exposici√≥n si se repiten giros bruscos.' :
            'Mantener an√°lisis profundo en pr√≥ximas se√±ales.';
    const entry = {
        timestamp: new Date().toISOString(),
        symbol,
        outcome,
        probability: parseFloat(probability.toFixed(2)),
        capitalUsed: parseFloat(capitalUsed.toFixed(2)),
        pnl: parseFloat(pnl.toFixed(2)),
        narrative: {
            acci√≥n: `BotMyWallet oper√≥ en ${symbol} y ${action} $${Math.abs(pnl).toFixed(2)}.`,
            mercado: `An√°lisis: ${mood}`,
            reflexi√≥n: insight,
            recomendaci√≥n: suggestion
        }
    };
    let log = [];
    if (fs_1.default.existsSync(logPath)) {
        log = JSON.parse(fs_1.default.readFileSync(logPath));
    }
    log.push(entry);
    fs_1.default.writeFileSync(logPath, JSON.stringify(log, null, 2));
    console.log(`üìò Bit√°cora registrada para ${symbol} ‚Äî ${outcome}`);
}
